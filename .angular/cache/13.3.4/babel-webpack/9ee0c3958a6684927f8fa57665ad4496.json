{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let TokenInterceptor = /*#__PURE__*/(() => {\n  class TokenInterceptor {\n    constructor(injector) {\n      this.injector = injector;\n    }\n\n    intercept(request, next) {\n      this.authService = this.injector.get(AuthService);\n      const token = this.authService.getToken();\n      request = request.clone({\n        setHeaders: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return next.handle(request);\n    }\n\n  }\n\n  TokenInterceptor.ɵfac = function TokenInterceptor_Factory(t) {\n    return new (t || TokenInterceptor)(i0.ɵɵinject(i0.Injector));\n  };\n\n  TokenInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenInterceptor,\n    factory: TokenInterceptor.ɵfac\n  });\n  return TokenInterceptor;\n})();\nexport let ErrorInterceptor = /*#__PURE__*/(() => {\n  class ErrorInterceptor {\n    constructor(router) {\n      this.router = router;\n    }\n\n    intercept(request, next) {\n      return next.handle(request).pipe(catchError(response => {\n        if (response instanceof HttpErrorResponse && response.status === 401) {\n          localStorage.removeItem('token');\n          this.router.navigateByUrl('/log-in');\n        }\n\n        return Observable.throw(response);\n      }));\n    }\n\n  }\n\n  ErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n    return new (t || ErrorInterceptor)(i0.ɵɵinject(i1.Router));\n  };\n\n  ErrorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac\n  });\n  return ErrorInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}