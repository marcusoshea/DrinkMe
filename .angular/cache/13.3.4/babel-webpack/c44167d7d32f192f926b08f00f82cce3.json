{"ast":null,"code":"import { LogOut } from '../store/actions/auth.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./app-config.service\";\nimport * as i3 from \"@ngrx/store\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, appConfigService, store) {\n      this.http = http;\n      this.appConfigService = appConfigService;\n      this.store = store;\n    }\n\n    getToken() {\n      let currentToken = localStorage.getItem('token');\n\n      if (currentToken) {\n        return currentToken;\n      }\n\n      this.store.dispatch(new LogOut());\n      return '';\n    }\n\n    logIn(username, password) {\n      const url = `${this.appConfigService.apiBaseUrl}/Users/authenticate`;\n      return this.http.post(url, {\n        \"username\": username,\n        \"password\": password\n      });\n    }\n\n    signUp(username, password, firstName, lastName) {\n      const url = `${this.appConfigService.apiBaseUrl}/Users/register`;\n      return this.http.post(url, {\n        \"firstName\": firstName,\n        \"lastName\": lastName,\n        \"username\": username,\n        \"password\": password\n      });\n    }\n\n    getStatus() {\n      const url = `${this.appConfigService.apiBaseUrl}/status`;\n      return this.http.get(url);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AppConfigService), i0.ɵɵinject(i3.Store));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}